{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  cart: [1200, 2000, 3000]\n};\nexport const cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addProductToCart: (state, productID) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.cart.push(productID.payload);\n    },\n    removeFromCart: state => {\n      state.cart.push(69);\n    }\n  }\n});\nexport const {\n  addProductToCart,\n  removeFromCart\n} = cartSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectCart = state => state.cart.cart;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cart","cartSlice","name","reducers","addProductToCart","state","productID","push","payload","removeFromCart","actions","selectCart","reducer"],"sources":["C:/Users/pbitn/Desktop/learning/React/reactjs-ecommerce/src/stores/cartSlice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\ntype SliceState = { cart: Array<number> }\r\nconst initialState: SliceState = { cart: [1200,2000,3000] };\r\n\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addProductToCart: (state, productID) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.cart.push(productID.payload);\r\n    },\r\n    removeFromCart: (state) => {\r\n        state.cart.push(69);\r\n    },\r\n  },\r\n})\r\n\r\nexport const { addProductToCart, removeFromCart } = cartSlice.actions\r\n\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCart = (state: any) => state.cart.cart\r\n\r\nexport default cartSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,MAAMC,YAAwB,GAAG;EAAEC,IAAI,EAAE,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX;AAAR,CAAjC;AAGA,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,MAD6B;EAEnCH,YAFmC;EAGnCI,QAAQ,EAAE;IACRC,gBAAgB,EAAE,CAACC,KAAD,EAAQC,SAAR,KAAsB;MACtC;MACA;MACA;MACA;MACAD,KAAK,CAACL,IAAN,CAAWO,IAAX,CAAgBD,SAAS,CAACE,OAA1B;IACD,CAPO;IAQRC,cAAc,EAAGJ,KAAD,IAAW;MACvBA,KAAK,CAACL,IAAN,CAAWO,IAAX,CAAgB,EAAhB;IACH;EAVO;AAHyB,CAAD,CAA7B;AAiBP,OAAO,MAAM;EAAEH,gBAAF;EAAoBK;AAApB,IAAuCR,SAAS,CAACS,OAAvD,C,CAGP;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAIN,KAAD,IAAgBA,KAAK,CAACL,IAAN,CAAWA,IAA9C;AAEP,eAAeC,SAAS,CAACW,OAAzB"},"metadata":{},"sourceType":"module"}