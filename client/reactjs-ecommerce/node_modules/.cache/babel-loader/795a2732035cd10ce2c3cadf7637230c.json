{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cart: [{\n    'variantID': 0,\n    'variantImage': 'test',\n    'variantName': 'test',\n    'variantPrice': '0'\n  }]\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addProductToCart: (state, productID, productImage, variantName, variantPrice) => {\n      state.cart.push(productID.payload);\n    },\n    removeFromCart: state => {//remove item\n    }\n  }\n});\nexport const {\n  addProductToCart,\n  removeFromCart\n} = cartSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectCart = state => state.cart.cart;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cart","cartSlice","name","reducers","addProductToCart","state","productID","productImage","variantName","variantPrice","push","payload","removeFromCart","actions","selectCart","reducer"],"sources":["C:/Users/pbitn/Desktop/learning/React/reactjs-ecommerce/src/stores/cartSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Variant } from 'features/SingleProduct/types'\r\n\r\ntype initialSliceState = { cart: Array<Variant> };\r\nconst initialState: initialSliceState = { cart: [{'variantID': 0, 'variantImage': 'test', 'variantName': 'test', 'variantPrice': '0'}] };\r\n\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addProductToCart: (state, productID, productImage, variantName, variantPrice) => {\r\n      state.cart.push(productID.payload);\r\n    },\r\n    removeFromCart: (state) => {\r\n      //remove item\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addProductToCart, removeFromCart } = cartSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCart = (state: any) => state.cart.cart;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,MAAMC,YAA+B,GAAG;EAAEC,IAAI,EAAE,CAAC;IAAC,aAAa,CAAd;IAAiB,gBAAgB,MAAjC;IAAyC,eAAe,MAAxD;IAAgE,gBAAgB;EAAhF,CAAD;AAAR,CAAxC;AAEA,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,MAD6B;EAEnCH,YAFmC;EAGnCI,QAAQ,EAAE;IACRC,gBAAgB,EAAE,CAACC,KAAD,EAAQC,SAAR,EAAmBC,YAAnB,EAAiCC,WAAjC,EAA8CC,YAA9C,KAA+D;MAC/EJ,KAAK,CAACL,IAAN,CAAWU,IAAX,CAAgBJ,SAAS,CAACK,OAA1B;IACD,CAHO;IAIRC,cAAc,EAAGP,KAAD,IAAW,CACzB;IACD;EANO;AAHyB,CAAD,CAA7B;AAaP,OAAO,MAAM;EAAED,gBAAF;EAAoBQ;AAApB,IAAuCX,SAAS,CAACY,OAAvD,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAIT,KAAD,IAAgBA,KAAK,CAACL,IAAN,CAAWA,IAA9C;AAEP,eAAeC,SAAS,CAACc,OAAzB"},"metadata":{},"sourceType":"module"}