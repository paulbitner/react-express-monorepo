{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cart: [{\n    variantID: 0,\n    variantImage: \"\",\n    variantName: \"test\",\n    variantPrice: \"test\",\n    quantity: 1\n  }]\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addProductToCart: (state, productVariant) => {\n      let quantity = 0;\n      const {\n        variantID\n      } = productVariant.payload; //checks if the variant is already in the cart. If so, increase quantity by 1.\n\n      const existsInCart = state.cart.some(v => v.variantID === variantID);\n\n      if (existsInCart) {\n        const updatedCart = state.cart.map(update => {\n          if (update.variantID === variantID) {\n            if (typeof update.quantity !== \"undefined\") {\n              console.log(update.quantity);\n              let addOne = update.quantity + 1;\n              console.log(addOne);\n              return { ...update,\n                quantity: addOne\n              };\n            }\n          }\n        });\n        console.log(updatedCart);\n      } else {\n        state.cart.push(productVariant.payload);\n      }\n    },\n    removeFromCart: state => {//remove item\n    }\n  }\n});\nexport const {\n  addProductToCart,\n  removeFromCart\n} = cartSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectCart = state => state.cart.cart;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cart","variantID","variantImage","variantName","variantPrice","quantity","cartSlice","name","reducers","addProductToCart","state","productVariant","payload","existsInCart","some","v","updatedCart","map","update","console","log","addOne","push","removeFromCart","actions","selectCart","reducer"],"sources":["C:/Users/pbitn/Desktop/learning/React/reactjs-ecommerce/src/stores/cartSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Variant } from \"features/SingleProduct/types\";\r\n\r\ntype initialSliceState = { cart: Array<Variant> };\r\nconst initialState: initialSliceState = {\r\n  cart: [\r\n    {\r\n      variantID: 0,\r\n      variantImage: \"\",\r\n      variantName: \"test\",\r\n      variantPrice: \"test\",\r\n      quantity: 1,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addProductToCart: (state, productVariant) => {\r\n      let quantity = 0;\r\n      const { variantID } = productVariant.payload;\r\n\r\n      //checks if the variant is already in the cart. If so, increase quantity by 1.\r\n      const existsInCart = state.cart.some((v) => v.variantID === variantID);\r\n\r\n      if (existsInCart) {\r\n       const updatedCart = state.cart.map((update) => {\r\n          if (update.variantID === variantID) {\r\n\r\n            if (typeof update.quantity !== \"undefined\") {\r\n              console.log(update.quantity);\r\n              let addOne = update.quantity + 1;\r\n              console.log(addOne);\r\n              return { ...update, quantity: addOne };\r\n            }\r\n          }\r\n        });\r\n\r\n        console.log(updatedCart)\r\n      } else {\r\n        state.cart.push(productVariant.payload);\r\n      }\r\n    },\r\n    removeFromCart: (state) => {\r\n      //remove item\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addProductToCart, removeFromCart } = cartSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCart = (state: any) => state.cart.cart;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,MAAMC,YAA+B,GAAG;EACtCC,IAAI,EAAE,CACJ;IACEC,SAAS,EAAE,CADb;IAEEC,YAAY,EAAE,EAFhB;IAGEC,WAAW,EAAE,MAHf;IAIEC,YAAY,EAAE,MAJhB;IAKEC,QAAQ,EAAE;EALZ,CADI;AADgC,CAAxC;AAYA,OAAO,MAAMC,SAAS,GAAGR,WAAW,CAAC;EACnCS,IAAI,EAAE,MAD6B;EAEnCR,YAFmC;EAGnCS,QAAQ,EAAE;IACRC,gBAAgB,EAAE,CAACC,KAAD,EAAQC,cAAR,KAA2B;MAC3C,IAAIN,QAAQ,GAAG,CAAf;MACA,MAAM;QAAEJ;MAAF,IAAgBU,cAAc,CAACC,OAArC,CAF2C,CAI3C;;MACA,MAAMC,YAAY,GAAGH,KAAK,CAACV,IAAN,CAAWc,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACd,SAAF,KAAgBA,SAAvC,CAArB;;MAEA,IAAIY,YAAJ,EAAkB;QACjB,MAAMG,WAAW,GAAGN,KAAK,CAACV,IAAN,CAAWiB,GAAX,CAAgBC,MAAD,IAAY;UAC5C,IAAIA,MAAM,CAACjB,SAAP,KAAqBA,SAAzB,EAAoC;YAElC,IAAI,OAAOiB,MAAM,CAACb,QAAd,KAA2B,WAA/B,EAA4C;cAC1Cc,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACb,QAAnB;cACA,IAAIgB,MAAM,GAAGH,MAAM,CAACb,QAAP,GAAkB,CAA/B;cACAc,OAAO,CAACC,GAAR,CAAYC,MAAZ;cACA,OAAO,EAAE,GAAGH,MAAL;gBAAab,QAAQ,EAAEgB;cAAvB,CAAP;YACD;UACF;QACF,CAVkB,CAApB;QAYCF,OAAO,CAACC,GAAR,CAAYJ,WAAZ;MACD,CAdD,MAcO;QACLN,KAAK,CAACV,IAAN,CAAWsB,IAAX,CAAgBX,cAAc,CAACC,OAA/B;MACD;IACF,CAzBO;IA0BRW,cAAc,EAAGb,KAAD,IAAW,CACzB;IACD;EA5BO;AAHyB,CAAD,CAA7B;AAmCP,OAAO,MAAM;EAAED,gBAAF;EAAoBc;AAApB,IAAuCjB,SAAS,CAACkB,OAAvD,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAIf,KAAD,IAAgBA,KAAK,CAACV,IAAN,CAAWA,IAA9C;AAEP,eAAeM,SAAS,CAACoB,OAAzB"},"metadata":{},"sourceType":"module"}