{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cart: [{\n    \"variantID\": 2285,\n    \"variantImage\": \"https://cdn.shopify.com/s/files/1/0934/5378/products/Sc10_12Pack_Gum_Peppermint_GR_122721_resized.png?v=1648246451\",\n    \"variantName\": \"Peppermint - Twelve Pack (108 pcs)\",\n    \"variantPrice\": \"48\",\n    \"quantity\": 1\n  }, {\n    \"variantID\": 2284,\n    \"variantImage\": \"https://cdn.shopify.com/s/files/1/0934/5378/products/Sc06_SixPack_GUM_Peppermint_GR_122821_resized.png?v=1651353142\",\n    \"variantName\": \"Peppermint - Six Pack (54 pcs)\",\n    \"variantPrice\": \"24\",\n    \"quantity\": 2\n  }]\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addProductToCart: (state, productVariant) => {\n      const {\n        variantID\n      } = productVariant.payload; //checks if the variant is already in the cart. If so, increase quantity by 1.\n\n      const existsInCart = state.cart.some(v => v.variantID === variantID);\n\n      if (existsInCart) {\n        const thisidex = state.cart.findIndex(emp => emp.variantID === variantID);\n        console.log(thisidex);\n        const val = state.cart[thisidex].quantity;\n\n        if (typeof val !== \"undefined\") {\n          state.cart[thisidex].quantity = val + 1;\n        }\n      } else {\n        state.cart.push(productVariant.payload);\n      }\n\n      console.log(state.cart);\n    },\n    updateQuantity: (state, data) => {\n      const {\n        variantID,\n        action\n      } = data.payload;\n      const existsInCart = state.cart.some(v => v.variantID === variantID);\n\n      if (existsInCart) {\n        const thisidex = state.cart.findIndex(index => index.variantID === variantID);\n        const val = state.cart[thisidex].quantity;\n\n        if (typeof val !== \"undefined\") {\n          if (action === 'increment') {\n            state.cart[thisidex].quantity = val + 1;\n          } else if (action === 'decrement') {\n            if (val - 1 === 0) {\n              state.cart.splice(thisidex, 1);\n            } else {\n              state.cart[thisidex].quantity = val - 1;\n            }\n          }\n        }\n      }\n    }\n  }\n});\nexport const {\n  addProductToCart,\n  updateQuantity\n} = cartSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectCart = state => state.cart.cart;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cart","cartSlice","name","reducers","addProductToCart","state","productVariant","variantID","payload","existsInCart","some","v","thisidex","findIndex","emp","console","log","val","quantity","push","updateQuantity","data","action","index","splice","actions","selectCart","reducer"],"sources":["C:/Users/pbitn/Desktop/learning/React/reactjs-ecommerce/src/stores/cartSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Variant } from \"features/SingleProduct/types\";\r\n\r\ntype initialSliceState = { cart: Array<Variant> };\r\nconst initialState: initialSliceState = {\r\n  cart: [{\"variantID\":2285,\"variantImage\":\"https://cdn.shopify.com/s/files/1/0934/5378/products/Sc10_12Pack_Gum_Peppermint_GR_122721_resized.png?v=1648246451\",\"variantName\":\"Peppermint - Twelve Pack (108 pcs)\",\"variantPrice\":\"48\",\"quantity\":1},{\"variantID\":2284,\"variantImage\":\"https://cdn.shopify.com/s/files/1/0934/5378/products/Sc06_SixPack_GUM_Peppermint_GR_122821_resized.png?v=1651353142\",\"variantName\":\"Peppermint - Six Pack (54 pcs)\",\"variantPrice\":\"24\",\"quantity\":2}],\r\n};\r\n\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addProductToCart: (state, productVariant) => {\r\n      const { variantID } = productVariant.payload;\r\n\r\n      //checks if the variant is already in the cart. If so, increase quantity by 1.\r\n      const existsInCart = state.cart.some((v) => v.variantID === variantID);\r\n\r\n      if (existsInCart) {\r\n        const thisidex = state.cart.findIndex(\r\n          (emp) => emp.variantID === variantID\r\n        );\r\n\r\n        console.log(thisidex);\r\n        const val = state.cart[thisidex].quantity;\r\n        if (typeof val !== \"undefined\") {\r\n          state.cart[thisidex].quantity = val + 1;\r\n        }\r\n      } else {\r\n        state.cart.push(productVariant.payload);\r\n      }\r\n\r\n      console.log(state.cart)\r\n    },\r\n    updateQuantity: (state, data) => {\r\n      const { variantID, action } = data.payload;\r\n      const existsInCart = state.cart.some((v) => v.variantID === variantID);\r\n      if (existsInCart) {\r\n        const thisidex = state.cart.findIndex(\r\n          (index) => index.variantID === variantID\r\n        );\r\n\r\n        const val = state.cart[thisidex].quantity;\r\n        if (typeof val !== \"undefined\")  {\r\n          if(action === 'increment'){\r\n            state.cart[thisidex].quantity = val + 1;\r\n          } else if(action === 'decrement'){\r\n            if(val - 1 === 0){\r\n              state.cart.splice(thisidex, 1);\r\n            } else{\r\n                state.cart[thisidex].quantity = val - 1;\r\n            }\r\n            \r\n          }\r\n          \r\n        }\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addProductToCart, updateQuantity } = cartSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCart = (state: any) => state.cart.cart;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}