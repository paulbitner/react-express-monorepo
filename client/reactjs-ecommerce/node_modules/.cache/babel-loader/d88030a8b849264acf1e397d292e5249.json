{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pbitn\\\\Desktop\\\\learning\\\\React\\\\reactjs-ecommerce\\\\src\\\\features\\\\Shop\\\\api\\\\getShop.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction fetchGroups() {\n  return axios.get(`http://localhost:5000/shop`).then(response => response.data);\n}\n\nexport function useGroups(options) {\n  _s();\n\n  return useQuery(\"todos\", fetchGroups);\n}\n\n_s(useGroups, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nfunction TodoCounter() {\n  _s2();\n\n  // subscribe only to changes in the 'data' prop, which will be the\n  // amount of todos because of the select function\n  const counterQuery = useGroups({\n    select: data => 9,\n    notifyOnChangeProps: ['data']\n  });\n  useEffect(() => {\n    console.log('rendering counter');\n  });\n  return /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(TodoCounter, \"dJcAe2RkY6ZndkCKXyQwmyL+SBM=\", false, function () {\n  return [useGroups];\n});\n\n_c = TodoCounter;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoCounter\");","map":{"version":3,"names":["useEffect","useQuery","axios","fetchGroups","get","then","response","data","useGroups","options","TodoCounter","counterQuery","select","notifyOnChangeProps","console","log"],"sources":["C:/Users/pbitn/Desktop/learning/React/reactjs-ecommerce/src/features/Shop/api/getShop.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\n\r\nimport { useQuery, UseQueryOptions } from \"react-query\";\r\n\r\nimport axios, { AxiosError } from \"axios\";\r\n\r\nimport { Product } from \"../types\";\r\n\r\nfunction fetchGroups(): Promise<Product[]> {\r\n  return axios\r\n    .get(`http://localhost:5000/shop`)\r\n    .then((response) => response.data);\r\n}\r\n\r\nexport function useGroups<TData = Product>(\r\n  options?: UseQueryOptions<Product, AxiosError, TData>\r\n) {\r\n  return useQuery(\"todos\", fetchGroups);\r\n}\r\n\r\n\r\nfunction TodoCounter() {\r\n  // subscribe only to changes in the 'data' prop, which will be the\r\n  // amount of todos because of the select function\r\n  const counterQuery = useGroups({\r\n    select: data => 9,\r\n    notifyOnChangeProps: ['data'],\r\n  })\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('rendering counter')\r\n  });\r\n\r\n  return <p></p>\r\n}"],"mappings":";;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,SAASC,QAAT,QAA0C,aAA1C;AAEA,OAAOC,KAAP,MAAkC,OAAlC;;;AAIA,SAASC,WAAT,GAA2C;EACzC,OAAOD,KAAK,CACTE,GADI,CACC,4BADD,EAEJC,IAFI,CAEEC,QAAD,IAAcA,QAAQ,CAACC,IAFxB,CAAP;AAGD;;AAED,OAAO,SAASC,SAAT,CACLC,OADK,EAEL;EAAA;;EACA,OAAOR,QAAQ,CAAC,OAAD,EAAUE,WAAV,CAAf;AACD;;GAJeK,S;UAGPP,Q;;;AAIT,SAASS,WAAT,GAAuB;EAAA;;EACrB;EACA;EACA,MAAMC,YAAY,GAAGH,SAAS,CAAC;IAC7BI,MAAM,EAAEL,IAAI,IAAI,CADa;IAE7BM,mBAAmB,EAAE,CAAC,MAAD;EAFQ,CAAD,CAA9B;EAMAb,SAAS,CAAC,MAAM;IACdc,OAAO,CAACC,GAAR,CAAY,mBAAZ;EACD,CAFQ,CAAT;EAIA,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;IAdQL,W;UAGcF,S;;;KAHdE,W"},"metadata":{},"sourceType":"module"}