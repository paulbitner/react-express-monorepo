{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cart: []\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addProductToCart: (state, productVariant) => {\n      console.table(productVariant.payload);\n      let quantity = 0;\n      const {\n        variantID\n      } = productVariant.payload; //checks if the variant is already in the cart. If so, increase quantity by 1.\n\n      const existsInCart = state.cart.some(v => v.variantID === variantID);\n\n      if (existsInCart) {\n        const thisidex = state.cart.findIndex(emp => emp.variantID === variantID);\n        console.log(thisidex);\n        const val = state.cart[thisidex].quantity;\n\n        if (typeof val !== 'undefined') {\n          state.cart[thisidex].quantity = val + 1;\n        }\n      } else {\n        state.cart.push(productVariant.payload);\n      }\n    },\n    updateQuantity: (state, data) => {}\n  }\n});\nexport const {\n  addProductToCart,\n  updateQuantity\n} = cartSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectCart = state => state.cart.cart;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cart","cartSlice","name","reducers","addProductToCart","state","productVariant","console","table","payload","quantity","variantID","existsInCart","some","v","thisidex","findIndex","emp","log","val","push","updateQuantity","data","actions","selectCart","reducer"],"sources":["C:/Users/pbitn/Desktop/learning/React/reactjs-ecommerce/src/stores/cartSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Variant } from \"features/SingleProduct/types\";\r\n\r\ntype initialSliceState = { cart: Array<Variant> };\r\nconst initialState: initialSliceState = {\r\n  cart: [\r\n   \r\n  ],\r\n};\r\n\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addProductToCart: (state, productVariant) => {\r\n      console.table(productVariant.payload);\r\n      let quantity = 0;\r\n      const { variantID } = productVariant.payload;\r\n\r\n      //checks if the variant is already in the cart. If so, increase quantity by 1.\r\n      const existsInCart = state.cart.some((v) => v.variantID === variantID);\r\n\r\n      if (existsInCart) {\r\n\r\n        const thisidex = state.cart.findIndex((emp) => emp.variantID === variantID);\r\n\r\n        console.log(thisidex);\r\n        const val = state.cart[thisidex].quantity;\r\n        if(typeof val !== 'undefined'){\r\n          state.cart[thisidex].quantity = val + 1;\r\n        }\r\n        \r\n\r\n      } else {\r\n        state.cart.push(productVariant.payload);\r\n      }\r\n    },\r\n    updateQuantity: (state, data) => {\r\n      \r\n    },\r\n  },\r\n});\r\n\r\nexport const { addProductToCart, updateQuantity } = cartSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCart = (state: any) => state.cart.cart;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,MAAMC,YAA+B,GAAG;EACtCC,IAAI,EAAE;AADgC,CAAxC;AAMA,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,MAD6B;EAEnCH,YAFmC;EAGnCI,QAAQ,EAAE;IACRC,gBAAgB,EAAE,CAACC,KAAD,EAAQC,cAAR,KAA2B;MAC3CC,OAAO,CAACC,KAAR,CAAcF,cAAc,CAACG,OAA7B;MACA,IAAIC,QAAQ,GAAG,CAAf;MACA,MAAM;QAAEC;MAAF,IAAgBL,cAAc,CAACG,OAArC,CAH2C,CAK3C;;MACA,MAAMG,YAAY,GAAGP,KAAK,CAACL,IAAN,CAAWa,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACH,SAAF,KAAgBA,SAAvC,CAArB;;MAEA,IAAIC,YAAJ,EAAkB;QAEhB,MAAMG,QAAQ,GAAGV,KAAK,CAACL,IAAN,CAAWgB,SAAX,CAAsBC,GAAD,IAASA,GAAG,CAACN,SAAJ,KAAkBA,SAAhD,CAAjB;QAEAJ,OAAO,CAACW,GAAR,CAAYH,QAAZ;QACA,MAAMI,GAAG,GAAGd,KAAK,CAACL,IAAN,CAAWe,QAAX,EAAqBL,QAAjC;;QACA,IAAG,OAAOS,GAAP,KAAe,WAAlB,EAA8B;UAC5Bd,KAAK,CAACL,IAAN,CAAWe,QAAX,EAAqBL,QAArB,GAAgCS,GAAG,GAAG,CAAtC;QACD;MAGF,CAXD,MAWO;QACLd,KAAK,CAACL,IAAN,CAAWoB,IAAX,CAAgBd,cAAc,CAACG,OAA/B;MACD;IACF,CAvBO;IAwBRY,cAAc,EAAE,CAAChB,KAAD,EAAQiB,IAAR,KAAiB,CAEhC;EA1BO;AAHyB,CAAD,CAA7B;AAiCP,OAAO,MAAM;EAAElB,gBAAF;EAAoBiB;AAApB,IAAuCpB,SAAS,CAACsB,OAAvD,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAInB,KAAD,IAAgBA,KAAK,CAACL,IAAN,CAAWA,IAA9C;AAEP,eAAeC,SAAS,CAACwB,OAAzB"},"metadata":{},"sourceType":"module"}