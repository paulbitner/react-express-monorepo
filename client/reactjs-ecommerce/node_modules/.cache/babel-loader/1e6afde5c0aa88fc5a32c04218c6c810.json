{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useQuery } from 'react-query';\nimport axios from 'axios';\nexport const getUsers = () => {\n  return axios.get(`http://localhost:5000/shop`);\n};\nexport const useUsers = function () {\n  _s();\n\n  let {\n    config\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useQuery({ ...config,\n    queryKey: ['users'],\n    queryFn: () => getUsers()\n  });\n};\n\n_s(useUsers, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","axios","getUsers","get","useUsers","config","queryKey","queryFn"],"sources":["C:/Users/pbitn/Desktop/learning/React/reactjs-ecommerce/src/features/Shop/api/getShop.tsx"],"sourcesContent":["\r\nimport { useQuery } from 'react-query';\r\nimport { ExtractFnReturnType, QueryConfig } from 'lib/react-query';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport { TShop } from '../types';\r\n\r\nexport const getUsers = (): Promise<TShop[]> => {\r\n  return axios.get(`http://localhost:5000/shop`);\r\n};\r\n\r\ntype QueryFnType = typeof getUsers;\r\n\r\ntype UseUsersOptions = {\r\n  config?: QueryConfig<QueryFnType>;\r\n};\r\n\r\nexport const useUsers = ({ config }: UseUsersOptions = {}) => {\r\n  return useQuery<ExtractFnReturnType<QueryFnType>>({\r\n    ...config,\r\n    queryKey: ['users'],\r\n    queryFn: () => getUsers(),\r\n  });\r\n};"],"mappings":";;AACA,SAASA,QAAT,QAAyB,aAAzB;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,OAAO,MAAMC,QAAQ,GAAG,MAAwB;EAC9C,OAAOD,KAAK,CAACE,GAAN,CAAW,4BAAX,CAAP;AACD,CAFM;AAUP,OAAO,MAAMC,QAAQ,GAAG,YAAsC;EAAA;;EAAA,IAArC;IAAEC;EAAF,CAAqC,uEAAP,EAAO;EAC5D,OAAOL,QAAQ,CAAmC,EAChD,GAAGK,MAD6C;IAEhDC,QAAQ,EAAE,CAAC,OAAD,CAFsC;IAGhDC,OAAO,EAAE,MAAML,QAAQ;EAHyB,CAAnC,CAAf;AAKD,CANM;;GAAME,Q;UACJJ,Q"},"metadata":{},"sourceType":"module"}