{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';export var counterSlice=createSlice({name:'counter',initialState:{num:0},reducers:{increment:function increment(state){// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\nstate.num+=1;},decrement:function decrement(state){state.num-=1;}}});var _counterSlice$actions=counterSlice.actions,increment=_counterSlice$actions.increment,decrement=_counterSlice$actions.decrement;// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport{increment,decrement};export var selectCount=function selectCount(state){return state.counter.num;};export default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","num","reducers","increment","state","decrement","actions","selectCount","counter","reducer"],"sources":["C:/Users/pbitn/Desktop/learning/React/reactjs-ecommerce/src/stores/counterSlice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    num: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.num += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.num -= 1\r\n    },\r\n  },\r\n})\r\n\r\nexport const { increment, decrement } = counterSlice.actions\r\n\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = (state: any) => state.counter.num\r\n\r\nexport default counterSlice.reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,aAAY,CAAGD,WAAW,CAAC,CACtCE,IAAI,CAAE,SADgC,CAEtCC,YAAY,CAAE,CACZC,GAAG,CAAE,CADO,CAFwB,CAKtCC,QAAQ,CAAE,CACRC,SAAS,CAAE,mBAACC,KAAD,CAAW,CACpB;AACA;AACA;AACA;AACAA,KAAK,CAACH,GAAN,EAAa,CAAb,CACD,CAPO,CAQRI,SAAS,CAAE,mBAACD,KAAD,CAAW,CACpBA,KAAK,CAACH,GAAN,EAAa,CAAb,CACD,CAVO,CAL4B,CAAD,CAAhC,CAmBA,0BAAiCH,YAAY,CAACQ,OAA9C,CAAQH,SAAR,uBAAQA,SAAR,CAAmBE,SAAnB,uBAAmBA,SAAnB,CAGP;AACA;AACA;4BACA,MAAO,IAAME,YAAW,CAAG,QAAdA,YAAc,CAACH,KAAD,QAAgBA,MAAK,CAACI,OAAN,CAAcP,GAA9B,EAApB,CAEP,cAAeH,aAAY,CAACW,OAA5B"},"metadata":{},"sourceType":"module"}