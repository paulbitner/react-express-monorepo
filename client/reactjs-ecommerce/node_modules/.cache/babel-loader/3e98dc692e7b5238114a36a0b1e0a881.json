{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  cart: []\n};\nexport const cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addProductToCart: (state, productVariant) => {\n      localStorage.setItem('cart', JSON.stringify(productVariant.payload));\n      const {\n        variantID\n      } = productVariant.payload; //checks if the variant is already in the cart. If so, increase quantity by 1.\n\n      const existsInCart = state.cart.some(v => v.variantID === variantID);\n\n      if (existsInCart) {\n        const thisidex = state.cart.findIndex(emp => emp.variantID === variantID);\n        console.log(thisidex);\n        const val = state.cart[thisidex].quantity;\n\n        if (typeof val !== \"undefined\") {\n          state.cart[thisidex].quantity = val + 1;\n        }\n      } else {\n        state.cart.push(productVariant.payload);\n      }\n\n      console.log(state.cart);\n    },\n    updateQuantity: (state, data) => {\n      const {\n        variantID,\n        action\n      } = data.payload;\n      const existsInCart = state.cart.some(v => v.variantID === variantID);\n\n      if (existsInCart) {\n        const thisidex = state.cart.findIndex(index => index.variantID === variantID);\n        const val = state.cart[thisidex].quantity;\n\n        if (typeof val !== \"undefined\") {\n          if (action === 'increment') {\n            state.cart[thisidex].quantity = val + 1;\n          } else if (action === 'decrement') {\n            if (val - 1 === 0) {\n              state.cart.splice(thisidex, 1);\n            } else {\n              state.cart[thisidex].quantity = val - 1;\n            }\n          }\n        }\n      }\n    }\n  }\n});\nexport const {\n  addProductToCart,\n  updateQuantity\n} = cartSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectCart = state => state.cart.cart;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","cart","cartSlice","name","reducers","addProductToCart","state","productVariant","localStorage","setItem","JSON","stringify","payload","variantID","existsInCart","some","v","thisidex","findIndex","emp","console","log","val","quantity","push","updateQuantity","data","action","index","splice","actions","selectCart","reducer"],"sources":["C:/Users/pbitn/Desktop/learning/React/reactjs-ecommerce/src/stores/cartSlice.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Variant } from \"features/SingleProduct/types\";\r\n\r\ntype initialSliceState = { cart: Array<Variant> };\r\nconst initialState: initialSliceState = {\r\n  cart: [],\r\n};\r\n\r\nexport const cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState,\r\n  reducers: {\r\n    addProductToCart: (state, productVariant) => {\r\n      localStorage.setItem('cart', JSON.stringify(productVariant.payload));\r\n      const { variantID } = productVariant.payload;\r\n\r\n      //checks if the variant is already in the cart. If so, increase quantity by 1.\r\n      const existsInCart = state.cart.some((v) => v.variantID === variantID);\r\n\r\n      if (existsInCart) {\r\n        const thisidex = state.cart.findIndex(\r\n          (emp) => emp.variantID === variantID\r\n        );\r\n\r\n        console.log(thisidex);\r\n        const val = state.cart[thisidex].quantity;\r\n        if (typeof val !== \"undefined\") {\r\n          state.cart[thisidex].quantity = val + 1;\r\n        }\r\n      } else {\r\n        state.cart.push(productVariant.payload);\r\n      }\r\n\r\n      console.log(state.cart)\r\n    },\r\n    updateQuantity: (state, data) => {\r\n      const { variantID, action } = data.payload;\r\n      const existsInCart = state.cart.some((v) => v.variantID === variantID);\r\n      if (existsInCart) {\r\n        const thisidex = state.cart.findIndex(\r\n          (index) => index.variantID === variantID\r\n        );\r\n\r\n        const val = state.cart[thisidex].quantity;\r\n        if (typeof val !== \"undefined\")  {\r\n          if(action === 'increment'){\r\n            state.cart[thisidex].quantity = val + 1;\r\n          } else if(action === 'decrement'){\r\n            if(val - 1 === 0){\r\n              state.cart.splice(thisidex, 1);\r\n            } else{\r\n                state.cart[thisidex].quantity = val - 1;\r\n            }\r\n            \r\n          }\r\n          \r\n        }\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addProductToCart, updateQuantity } = cartSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCart = (state: any) => state.cart.cart;\r\n\r\nexport default cartSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAIA,MAAMC,YAA+B,GAAG;EACtCC,IAAI,EAAE;AADgC,CAAxC;AAIA,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,MAD6B;EAEnCH,YAFmC;EAGnCI,QAAQ,EAAE;IACRC,gBAAgB,EAAE,CAACC,KAAD,EAAQC,cAAR,KAA2B;MAC3CC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,cAAc,CAACK,OAA9B,CAA7B;MACA,MAAM;QAAEC;MAAF,IAAgBN,cAAc,CAACK,OAArC,CAF2C,CAI3C;;MACA,MAAME,YAAY,GAAGR,KAAK,CAACL,IAAN,CAAWc,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACH,SAAF,KAAgBA,SAAvC,CAArB;;MAEA,IAAIC,YAAJ,EAAkB;QAChB,MAAMG,QAAQ,GAAGX,KAAK,CAACL,IAAN,CAAWiB,SAAX,CACdC,GAAD,IAASA,GAAG,CAACN,SAAJ,KAAkBA,SADZ,CAAjB;QAIAO,OAAO,CAACC,GAAR,CAAYJ,QAAZ;QACA,MAAMK,GAAG,GAAGhB,KAAK,CAACL,IAAN,CAAWgB,QAAX,EAAqBM,QAAjC;;QACA,IAAI,OAAOD,GAAP,KAAe,WAAnB,EAAgC;UAC9BhB,KAAK,CAACL,IAAN,CAAWgB,QAAX,EAAqBM,QAArB,GAAgCD,GAAG,GAAG,CAAtC;QACD;MACF,CAVD,MAUO;QACLhB,KAAK,CAACL,IAAN,CAAWuB,IAAX,CAAgBjB,cAAc,CAACK,OAA/B;MACD;;MAEDQ,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACL,IAAlB;IACD,CAvBO;IAwBRwB,cAAc,EAAE,CAACnB,KAAD,EAAQoB,IAAR,KAAiB;MAC/B,MAAM;QAAEb,SAAF;QAAac;MAAb,IAAwBD,IAAI,CAACd,OAAnC;MACA,MAAME,YAAY,GAAGR,KAAK,CAACL,IAAN,CAAWc,IAAX,CAAiBC,CAAD,IAAOA,CAAC,CAACH,SAAF,KAAgBA,SAAvC,CAArB;;MACA,IAAIC,YAAJ,EAAkB;QAChB,MAAMG,QAAQ,GAAGX,KAAK,CAACL,IAAN,CAAWiB,SAAX,CACdU,KAAD,IAAWA,KAAK,CAACf,SAAN,KAAoBA,SADhB,CAAjB;QAIA,MAAMS,GAAG,GAAGhB,KAAK,CAACL,IAAN,CAAWgB,QAAX,EAAqBM,QAAjC;;QACA,IAAI,OAAOD,GAAP,KAAe,WAAnB,EAAiC;UAC/B,IAAGK,MAAM,KAAK,WAAd,EAA0B;YACxBrB,KAAK,CAACL,IAAN,CAAWgB,QAAX,EAAqBM,QAArB,GAAgCD,GAAG,GAAG,CAAtC;UACD,CAFD,MAEO,IAAGK,MAAM,KAAK,WAAd,EAA0B;YAC/B,IAAGL,GAAG,GAAG,CAAN,KAAY,CAAf,EAAiB;cACfhB,KAAK,CAACL,IAAN,CAAW4B,MAAX,CAAkBZ,QAAlB,EAA4B,CAA5B;YACD,CAFD,MAEM;cACFX,KAAK,CAACL,IAAN,CAAWgB,QAAX,EAAqBM,QAArB,GAAgCD,GAAG,GAAG,CAAtC;YACH;UAEF;QAEF;MACF;IACF;EA/CO;AAHyB,CAAD,CAA7B;AAsDP,OAAO,MAAM;EAAEjB,gBAAF;EAAoBoB;AAApB,IAAuCvB,SAAS,CAAC4B,OAAvD,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAIzB,KAAD,IAAgBA,KAAK,CAACL,IAAN,CAAWA,IAA9C;AAEP,eAAeC,SAAS,CAAC8B,OAAzB"},"metadata":{},"sourceType":"module"}