{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const cartSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    num: 0\n  },\n  reducers: {\n    increment: state => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.num += 1;\n    },\n    decrement: state => {\n      state.num -= 1;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement\n} = cartSlice.actions; // The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\n\nexport const selectCount = state => state.counter.value;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","num","reducers","increment","state","decrement","actions","selectCount","counter","value","reducer"],"sources":["C:/Users/pbitn/Desktop/learning/React/reactjs-ecommerce/src/stores/cartSlice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nexport const cartSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    num: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.num += 1\r\n    },\r\n    decrement: (state) => {\r\n      state.num -= 1\r\n    },\r\n  },\r\n})\r\n\r\nexport const { increment, decrement } = cartSlice.actions\r\n\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = (state: any) => state.counter.value\r\n\r\nexport default cartSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,SAAS,GAAGD,WAAW,CAAC;EACnCE,IAAI,EAAE,SAD6B;EAEnCC,YAAY,EAAE;IACZC,GAAG,EAAE;EADO,CAFqB;EAKnCC,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAD,IAAW;MACpB;MACA;MACA;MACA;MACAA,KAAK,CAACH,GAAN,IAAa,CAAb;IACD,CAPO;IAQRI,SAAS,EAAGD,KAAD,IAAW;MACpBA,KAAK,CAACH,GAAN,IAAa,CAAb;IACD;EAVO;AALyB,CAAD,CAA7B;AAmBP,OAAO,MAAM;EAAEE,SAAF;EAAaE;AAAb,IAA2BP,SAAS,CAACQ,OAA3C,C,CAGP;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAIH,KAAD,IAAgBA,KAAK,CAACI,OAAN,CAAcC,KAAlD;AAEP,eAAeX,SAAS,CAACY,OAAzB"},"metadata":{},"sourceType":"module"}