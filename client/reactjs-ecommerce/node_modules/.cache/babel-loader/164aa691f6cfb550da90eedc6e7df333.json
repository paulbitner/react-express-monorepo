{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit'; // Define a type for the slice state\n\n// Define the initial state using that type\nconst initialState = {\n  count: 0\n};\nexport const counterSlice = createSlice({\n  name: \"mySlice\",\n  initialState,\n  reducers: {\n    increment: (state, action) => {\n      state.count = state.count + 1;\n    }\n  }\n});\nexport const {\n  increment\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","count","counterSlice","name","reducers","increment","state","action","actions","reducer"],"sources":["C:/Users/pbitn/Desktop/learning/React/reactjs-ecommerce/src/stores/counterSlice.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\n\r\n// Define a type for the slice state\r\ninterface CounterState {\r\n    count: number\r\n  }\r\n  \r\n  // Define the initial state using that type\r\n  const initialState: CounterState = {\r\n    count: 0\r\n  }\r\n\r\n  \r\n\r\nexport const counterSlice = createSlice({\r\n    name: \"mySlice\",\r\n    initialState,\r\n    reducers: {\r\n        increment: (state, action) => {\r\n            state.count = state.count + 1;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { increment } = counterSlice.actions\r\n\r\nexport default counterSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAGA;;AAKE;AACA,MAAMC,YAA0B,GAAG;EACjCC,KAAK,EAAE;AAD0B,CAAnC;AAMF,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;EACpCI,IAAI,EAAE,SAD8B;EAEpCH,YAFoC;EAGpCI,QAAQ,EAAE;IACNC,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC1BD,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,GAAc,CAA5B;IACH;EAHK;AAH0B,CAAD,CAAhC;AAUP,OAAO,MAAM;EAAEI;AAAF,IAAgBH,YAAY,CAACM,OAAnC;AAEP,eAAeN,YAAY,CAACO,OAA5B"},"metadata":{},"sourceType":"module"}